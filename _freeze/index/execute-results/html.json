{
  "hash": "855262e67896177d72a6a93649e5881e",
  "result": {
    "markdown": "---\ntitle: \"My Lab Journal\"\nsubtitle: \"Business Data Science Basics\"\nauthor: \"Anooj Ramanathan\"\n---\n\n\n![](assets/logo/TIE_logo.svg){width=80% fig-align=\"center\"}\n#Intro to tidyverse challenge\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_999730e343fd7b10bfe8a71ab597251f'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_eaf29bf2b9de9bf2e5771077bc73df83'}\n\n```{.r .cell-code}\nbikes_tbl <- read_excel(path = \"00_data/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"00_data/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl  <- read_excel(\"00_data/01_raw_data/bikeshops.xlsx\")\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n```\n:::\n\n ::: {.cell hash='index_cache/html/unnamed-chunk-3_ecc053f0aa1c275e17e74fa1d6193b4d'}\n \n ```{.r .cell-code}\n  bike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>% \n  separate(col = location, \n           into = c(\"City\",\"State\"),\n           sep = \",\") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-...1,-gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n ```\n :::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_30558f11d7a711109f934a3fffc03099'}\n\n```{.r .cell-code}\n  library(lubridate)\n\nsales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(State,total_price) %>%\n  group_by(State) %>%\n  summarize(sales = sum(total_price)) %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_state_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   State                               sales sales_text  \n   <chr>                               <dbl> <chr>       \n 1 \" Baden-Württemberg\"              6521090 6.521.090 € \n 2 \" Bavaria\"                        6742819 6.742.819 € \n 3 \" Berlin\"                         1128433 1.128.433 € \n 4 \" Bremen\"                        10653499 10.653.499 €\n 5 \" Hamburg\"                        3874756 3.874.756 € \n 6 \" Hesse\"                          1558901 1.558.901 € \n 7 \" Lower Saxony\"                   4107115 4.107.115 € \n 8 \" Mecklenburg-Western Pomerania\"   618974 618.974 €   \n 9 \" North Rhine-Westphalia\"        21200613 21.200.613 €\n10 \" Saxony\"                         2230245 2.230.245 € \n11 \" Saxony-Anhalt\"                   569614 569.614 €   \n12 \" Schleswig-Holstein\"             3224749 3.224.749 € \n```\n:::\n:::\n\n::: {.cell hash='index_cache/html/plot_4300a188d69b3404780579df19ac39d1'}\n\n```{.r .cell-code}\nsales_by_state_tbl %>% ggplot(aes(x = State, y =sales)) +\n  geom_col(fill = \"#2DC6D6\") + \n  geom_label(aes(label = sales_text)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"State Revenue Details\",\n    subtitle = \"State wise trend of sales\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue amount\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=960}\n:::\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_1750acdd6caa278b2de47f575a32d7db'}\n\n```{.r .cell-code}\n  sales_by_year_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(order_date,total_price,State) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year,State) %>%\n  summarise(sales = sum(total_price)) %>% \n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell hash='index_cache/html/plot2_961ef86d26a91c70ca1334a44901e748'}\n\n```{.r .cell-code}\nsales_by_year_state_tbl %>% ggplot(aes(x = year, y = sales, fill = State)) + \n  geom_col() +\n  facet_wrap(~ State) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\"))+\n  labs(\n    title = \"Revenue by different years & states\",\n    subtitle = \"State on different sales trend values\",\n    fill = \"State\" \n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot2-1.png){width=960}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}