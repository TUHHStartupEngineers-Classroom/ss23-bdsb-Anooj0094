[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "\n2.1 Header 2",
    "text": "2.1 Header 2\nHeader 3\nHeader 4\nHeader 5\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/03_other/06_links.html#r-and-r-studio",
    "href": "content/03_other/06_links.html#r-and-r-studio",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual ."
  },
  {
    "objectID": "content/03_other/06_links.html#additional-r-resources",
    "href": "content/03_other/06_links.html#additional-r-resources",
    "title": "Links",
    "section": "",
    "text": "Google is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "#Intro to tidyverse challenge\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\n\n\nbikes_tbl &lt;- read_excel(path = \"00_data/01_raw_data/bikes.xlsx\")\norderlines_tbl &lt;- read_excel(\"00_data/01_raw_data/orderlines.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nbikeshops_tbl  &lt;- read_excel(\"00_data/01_raw_data/bikeshops.xlsx\")\nbike_orderlines_joined_tbl &lt;- orderlines_tbl %&gt;%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %&gt;%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n::: {.cell hash=‘index_cache/html/unnamed-chunk-3_ecc053f0aa1c275e17e74fa1d6193b4d’}\n bike_orderlines_wrangled_tbl &lt;- bike_orderlines_joined_tbl %&gt;% \n separate(col = location, \n          into = c(\"City\",\"State\"),\n          sep = \",\") %&gt;%\n mutate(total.price = price * quantity) %&gt;%\n select(-...1,-gender) %&gt;%\n select(-ends_with(\".id\")) %&gt;%\n bind_cols(bike_orderlines_joined_tbl %&gt;% select(order.id)) %&gt;% \n select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n        price, quantity, total.price,\n        everything()) %&gt;%\n rename(bikeshop = name) %&gt;%\n set_names(names(.) %&gt;% str_replace_all(\"\\\\.\", \"_\"))\n:::\n\n  library(lubridate)\n\nsales_by_state_tbl &lt;- bike_orderlines_wrangled_tbl %&gt;%\n  select(State,total_price) %&gt;%\n  group_by(State) %&gt;%\n  summarize(sales = sum(total_price)) %&gt;%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_state_tbl\n\n# A tibble: 12 × 3\n   State                               sales sales_text  \n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;       \n 1 \" Baden-Württemberg\"              6521090 6.521.090 € \n 2 \" Bavaria\"                        6742819 6.742.819 € \n 3 \" Berlin\"                         1128433 1.128.433 € \n 4 \" Bremen\"                        10653499 10.653.499 €\n 5 \" Hamburg\"                        3874756 3.874.756 € \n 6 \" Hesse\"                          1558901 1.558.901 € \n 7 \" Lower Saxony\"                   4107115 4.107.115 € \n 8 \" Mecklenburg-Western Pomerania\"   618974 618.974 €   \n 9 \" North Rhine-Westphalia\"        21200613 21.200.613 €\n10 \" Saxony\"                         2230245 2.230.245 € \n11 \" Saxony-Anhalt\"                   569614 569.614 €   \n12 \" Schleswig-Holstein\"             3224749 3.224.749 € \n\n\n\nsales_by_state_tbl %&gt;% ggplot(aes(x = State, y =sales)) +\n  geom_col(fill = \"#2DC6D6\") + \n  geom_label(aes(label = sales_text)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"State Revenue Details\",\n    subtitle = \"State wise trend of sales\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue amount\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n  sales_by_year_state_tbl &lt;- bike_orderlines_wrangled_tbl %&gt;%\n  select(order_date,total_price,State) %&gt;%\n  mutate(year = year(order_date)) %&gt;%\n  group_by(year,State) %&gt;%\n  summarise(sales = sum(total_price)) %&gt;% \n  ungroup() %&gt;%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\nsales_by_year_state_tbl %&gt;% ggplot(aes(x = year, y = sales, fill = State)) + \n  geom_col() +\n  facet_wrap(~ State) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\"))+\n  labs(\n    title = \"Revenue by different years & states\",\n    subtitle = \"State on different sales trend values\",\n    fill = \"State\" \n  )"
  }
]